/*
 83. Remove Duplicates from Sorted List
 Given the head of a sorted linked list, delete all duplicates such that each element appears only once. Return the linked list sorted as well.

 Input: head = [1,1,2]
 Output: [1,2]
 */

struct ListNode {
    int val;
    ListNode *next;
    ListNode() : val(0), next(nullptr) {}
    ListNode(int x) : val(x), next(nullptr) {}
    ListNode(int x, ListNode *next) : val(x), next(next) {}
};

ListNode* deleteDuplicates(ListNode* head) {
    ListNode* curr = head;
    while(curr && curr->next){
        ListNode* temp = curr->next;
        if(curr->val == temp->val){
            curr->next = temp->next;
            delete temp;
            temp = nullptr;
        }
        else{
            curr = temp;
        }
    }
    return head;
}
