/* 107. Binary Tree Level Order Traversal II
Given the root of a binary tree, return the bottom-up level order traversal of its nodes' values. (i.e., from left to right, level by level from leaf to root).

Input: root = [3,9,20,null,null,15,7]
Output: [[15,7],[9,20],[3]] */

vector<vector<int>> levelOrderBottom(TreeNode* root) {
        if(!root) return out;
        
        queue<TreeNode*> q;
        q.push(root);
        
        while(!q.empty()){
            int l = q.size();
            vector<int> v;
            for(int i = 0; i < l; i++){
                auto n = q.front();
                q.pop();
                
                v.push_back(n->val);

                if(n->left) q.push(n->left);
                if(n->right) q.push(n->right);
            }
            out.insert(out.begin(), v);
        }
        return out;
    }
    
    //TC : O(n) SC : O(o-n)
