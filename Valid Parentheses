/*
 20. Valid Parentheses
 Given a string s containing just the characters '(', ')', '{', '}', '[' and ']', determine if the input string is valid.

 An input string is valid if:

 Open brackets must be closed by the same type of brackets.
 Open brackets must be closed in the correct order.
 Input: s = "()"
 Output: true
 */

#include <string>
#include <stack>
using namespace std;

bool isValid(string s) {
    stack<char> st;
    for(auto c : s){
        switch(c){
            case '{':
            case '(':
            case '[':
                st.push(c);
                break;
            case '}':
                if(st.empty() || st.top() != '{'){
                    return false;
                }
                st.pop();
                break;
            case ')':
                if(st.empty() || st.top() != '('){
                    return false;
                }
                st.pop();
                break;
            case ']':
                if(st.empty() || st.top() != '['){
                    return false;
                }
                st.pop();
                break;
            default:
                break;
        }
    }
    return st.empty() ? true : false;
}
