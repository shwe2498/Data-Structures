/*
 203. Remove Linked List Elements
 Given the head of a linked list and an integer val, remove all the nodes of the linked list that has Node.val == val, and return the new head.

 Input: head = [1,2,6,3,4,5,6], val = 6
 Output: [1,2,3,4,5]
 */

struct ListNode {
    int val;
    ListNode *next;
    ListNode() : val(0), next(nullptr) {}
    ListNode(int x) : val(x), next(nullptr) {}
    ListNode(int x, ListNode *next) : val(x), next(next) {}
};

ListNode* removeElements(ListNode* head, int val) {
    ListNode trav;
    ListNode* itr = &trav;
        
    while(head){
        if(head->val == val){
            ListNode* del = head;
            head = head->next;
            delete del;
            del = nullptr;
        }
        else{
            itr->next = head;
            head = head->next;
            itr = itr->next;
        }
    }
    itr->next = nullptr;
    return trav.next;
}
