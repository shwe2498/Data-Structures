/*
 Leetcode 19. Remove Nth Node From End of List
 Given the head of a linked list, remove the nth node from the end of the list and return its head.
 
 Input: head = [1,2,3,4,5], n = 2
 Output: [1,2,3,5]
 */

struct ListNode {
    int val;
    ListNode *next;
    ListNode() : val(0), next(nullptr) {}
    ListNode(int x) : val(x), next(nullptr) {}
    ListNode(int x, ListNode *next) : val(x), next(next) {}
};

ListNode* removeNthFromEnd(ListNode* head, int n) {
        ListNode* curr = head;
        ListNode* follower = head;
        
        for(int i = 0; i < n; i++){
            if(!curr) return head;
            curr = curr->next;
        }
        
        if(!curr){
            return head->next;
        }
        
        while(curr->next){
            curr = curr->next;
            follower = follower->next;
        }
        
        ListNode* del = follower->next;
        follower->next = follower->next->next;
        if(del){
            delete del;
            del = nullptr;
        }
        return head;
    }
